const { getEpochTime, formatDate, formatTime } = require("../lib/utils");


/**
 * Modify SDBG Payload object to insert data
 * @param {Object} payload 
 * @param {string} status 
 * @returns Object
 */

exports.zfi_bgm_1_Payload = async (payload) => {
    if (!payload.data && !payload.data.length) {
        throw new Error("Please send valid payload");
    }
    const pl = payload.data.map((obj) => (
        {
            "FILE_NO": obj.FILE_NO,
            "BANKERS_NAME": obj.BANKERS_NAME || "",
            "BANKERS_BRANCH": obj.BANKERS_BRANCH || "",
            "BANKERS_ADD1": obj.BANKERS_ADD1 || "",
            "BANKERS_ADD2": obj.BANKERS_ADD2 || "",
            "BANKERS_ADD3": obj.BANKERS_ADD3 || "",
            "BANKERS_CITY": obj.BANKERS_CITY || "",
            "B_PIN_CODE": obj.B_PIN_CODE || "",
            "BANK_GU_NO": obj.BANK_GU_NO || "",
            "BG_DATE": obj.BG_DATE || "",
            "BG_AMOUNT": obj.BG_AMOUNT || "",
            "PO_NUMBER": obj.PO_NUMBER || "",
            "DEPARTMENT": obj.DEPARTMENT || "",
            "PO_DATE": obj.PO_DATE || "",
            "YARD_NO": obj.YARD_NO || 0,
            "VALIDITY_DATE": obj.VALIDITY_DATE || "",
            "CLAIM_PERIOD": obj.CLAIM_PERIOD || "",
            "CHECKLIST_REF": obj.CHECKLIST_REF || "",
            "CHECKLIST_DATE": obj.CHECKLIST_DATE || "",
            "BG_TYPE": obj.BG_TYPE || "",
            "VENDOR_NAME": obj.VENDOR_NAME || "",
            "VENDOR_ADD1": obj.VENDOR_ADD1 || "",
            "VENDOR_ADD2": obj.VENDOR_ADD2 || "",
            "VENDOR_ADD3": obj.VENDOR_ADD3 || "",
            "VENDOR_CITY": obj.VENDOR_CITY || "",
            "V_PIN_CODE": obj.V_PIN_CODE || 0,
            "CONFIRMATION": obj.CONFIRMATION || "",
            "EXTENTION_DATE1": obj.EXTENTION_DATE1 || "",
            "EXTENTION_DATE2": obj.EXTENTION_DATE2 || "",
            "EXTENTION_DATE3": obj.EXTENTION_DATE3 || "",
            "EXTENTION_DATE4": obj.EXTENTION_DATE4 || "",
            "EXTENTION_DATE5": obj.EXTENTION_DATE5 || "",
            "EXTENTION_DATE6": obj.EXTENTION_DATE6 || "",
            "RELEASE_DATE": obj.RELEASE_DATE || "",
            "DEM_NOTICE_DATE": obj.DEM_NOTICE_DATE || "",
            "EXT_LETTER_DATE": obj.EXT_LETTER_DATE || "",
        }
    ));
    return pl;
}
exports.ztfi_bil_defacePayload = async (payload) => {
    if (!payload.data && !payload.data.length) {
        throw new Error("Please send valid payload");
    }
    const pl = payload.data.map((obj) => (
        {
            C_PKEY: `${obj.ZREGNUM}-${obj.SEQNO}-${obj.ZBILLPER}`,
            ZREGNUM: obj.ZREGNUM,
            SEQNO: obj.SEQNO,
            ZBILLPER: obj.ZBILLPER,
            ZCREATE: obj.ZCREATE || null,
            ZDELETE: obj.ZDELETE || null,
            ZBILLTYPE: obj.ZBILLTYPE || null,
            ZRECORD: obj.ZRECORD || null,
            ZREGDATE: formatDate(obj.ZREGDATE),
            ZPONO: obj.ZPONO || null,
            ZVENDOR: obj.ZVENDOR || null,
            ZCREATEDBY: obj.ZCREATEDBY || null,
            ZCREATEDON: formatDate(obj.ZCREATEDON),
            ZCREATEDAT: formatTime(obj.ZCREATEDAT),
            ZMODIFIEDBY: obj.ZMODIFIEDBY || null,
            ZMODIFIEDON: formatDate(obj.ZMODIFIEDON),
            ZMODIFIEDAT: formatTime(obj.ZMODIFIEDAT),
            ZCERWDC_S: obj.ZCERWDC_S || null,
            ZCERPAY_S: obj.ZCERPAY_S || null,
            ZCERATTNDR_S: obj.ZCERATTNDR_S || null,
            ZBGFILENO_S: obj.ZBGFILENO_S || null,
            ZDDNO_S: obj.ZDDNO_S || null,
            ZBSCVAL_M_S: obj.ZBSCVAL_M_S || null,
            ZNTSUPP_S: obj.ZNTSUPP_S || null,
            ZNETVALUE_S: obj.ZNETVALUE_S || null,
            ZCST_VAT_S: obj.ZCST_VAT_S || null,
            ZCST_VAT_TXT: obj.ZCST_VAT_TXT || null,
            ZTOTALB_S: obj.ZTOTALB_S || null,
            ZADD_OTHRCHRG_S: obj.ZADD_OTHRCHRG_S || null,
            ZADD_OTHRCHRG_TXT: obj.ZADD_OTHRCHRG_TXT || null,
            ZADD_OTHRCHRG_1_S: obj.ZADD_OTHRCHRG_1_S || null,
            ZADD_OTHRCHRG_1_TXT: obj.ZADD_OTHRCHRG_1_TXT || null,
            ZTOTALA_S: obj.ZTOTALA_S || null,
            ZBLNC_PAYMNT_S: obj.ZBLNC_PAYMNT_S || null,
            ZLES_INCTAX_S: obj.ZLES_INCTAX_S || null,
            ZLES_INCTAX_TXT: obj.ZLES_INCTAX_TXT || null,
            ZLES_RETNTN_S: obj.ZLES_RETNTN_S || null,
            ZLES_RETNTN_TXT: obj.ZLES_RETNTN_TXT || null,
            ZLES_WRKCONTAX_S: obj.ZLES_WRKCONTAX_S || null,
            ZLES_WRKCONTAX_TXT: obj.ZLES_WRKCONTAX_TXT || null,
            ZLES_LD_S: obj.ZLES_LD_S || null,
            ZLES_LD_TXT: obj.ZLES_LD_TXT || null,
            ZLES_PENALTY_S: obj.ZLES_PENALTY_S || null,
            ZLES_PENALTY_TXT: obj.ZLES_PENALTY_TXT || null,
            ZLES_SD_S: obj.ZLES_SD_S || null,
            ZLES_SD_TXT: obj.ZLES_SD_TXT || null,
            ZLES_OTHR_S: obj.ZLES_OTHR_S || null,
            ZLES_OTHR_TXT: obj.ZLES_OTHR_TXT || null,
            ZLES_GROSS_RET: obj.ZLES_GROSS_RET || null,
            ZLES_GROSS_DED: obj.ZLES_GROSS_DED || null,
            ZLES_INTSD_S: obj.ZLES_INTSD_S || null,
            ZLES_INTSD_TXT: obj.ZLES_INTSD_TXT || null,
            ZLES_CSTOFCON_PAINT_S: obj.ZLES_CSTOFCON_PAINT_S || null,
            ZLES_CSTOFCON_PAINT_TXT: obj.ZLES_CSTOFCON_PAINT_TXT || null,
            ZNET_PYMNT1_S: obj.ZNET_PYMNT1_S || null,
            ZNET_BLNCPAY_S: obj.ZNET_BLNCPAY_S || null,
            ZNET_RETNTN_S: obj.ZNET_RETNTN_S || null,
            ZNET_LESDEDC_S: obj.ZNET_LESDEDC_S || null,
            ZNET_PYMNT2_S: obj.ZNET_PYMNT2_S || null,
            ZLES_OTHRDED_S: obj.ZLES_OTHRDED_S || null,
            ZLES_OTHRDED_TXT: obj.ZLES_OTHRDED_TXT || null,
            ZBLNC_CERTBY_S: obj.ZBLNC_CERTBY_S || null,
            ZBLNC_PBGFILENO_S: obj.ZBLNC_PBGFILENO_S || null,
            ZBLNC_OTHRS_S: obj.ZBLNC_OTHRS_S || null,
            ZLD: obj.ZLD || null,
            ZOBDNO_M: obj.ZOBDNO_M || null,
            ZCERMARKT_M: obj.ZCERMARKT_M || null,
            ZCERINSPEC_M: obj.ZCERINSPEC_M || null,
            ZCERGUARNTEE_M: obj.ZCERGUARNTEE_M || null,
            ZCERCOMP_M: obj.ZCERCOMP_M || null,
            ZILMS: obj.ZILMS || null,
            ZCPBGFILENO_M: obj.ZCPBGFILENO_M || null,
            ZINDEM_BNDFILENO_M: obj.ZINDEM_BNDFILENO_M || null,
            ZCHLLNNO_M: obj.ZCHLLNNO_M || null,
            ZCHLLNDATE_M: formatDate(obj.ZCHLLNDATE_M),
            ZCONSIGNNO_M: obj.ZCONSIGNNO_M || null,
            ZCONSIGNDATE_M: formatDate(obj.ZCONSIGNDATE_M),
            ZCARRIER_M: obj.ZCARRIER_M || null,
            ZACTLDELDATE1_M: formatDate(obj.ZACTLDELDATE1_M),
            ZACTLDELDATE2_M: formatDate(obj.ZACTLDELDATE2_M),
            ZACTLDELDATE3_M: formatDate(obj.ZACTLDELDATE3_M),
            ZPAYMNTPROCESS_M: formatDate(obj.ZPAYMNTPROCESS_M),
            REASON_DEDCTN: obj.REASON_DEDCTN || null,
            ZPBGFILENO_M: obj.ZPBGFILENO_M || null,
            ZSRVNO_M: obj.ZSRVNO_M || null,
            ZBILLNO: obj.ZBILLNO || null,
            ZBILLDATE: formatDate(obj.ZBILLDATE),
            ZSCHDELDATE1_S: formatDate(obj.ZSCHDELDATE1_S),
            ZSCHDELDATE2_S: formatDate(obj.ZSCHDELDATE2_S),
            ZSCHDELDATE3_S: formatDate(obj.ZSCHDELDATE3_S),
            ZDELAY1: obj.ZDELAY1 || null,
            ZDELAY2: obj.ZDELAY2 || null,
            ZDELAY3: obj.ZDELAY3 || null,
            CODE_1: obj.CODE_1 || null,
            CODE: obj.CODE || null,
            REMARKS: obj.REMARKS || null,
            REFERENCE: obj.REFERENCE || null,
            REMARKS_1: obj.REMARKS_1 || null,
            TEN_PER_AMOUNT: obj.TEN_PER_AMOUNT || null,
            COMMENTS_1: obj.COMMENTS_1 || null,
            COMMENTS: obj.COMMENTS || null,
            ZTEN_RETNTN_S: obj.ZTEN_RETNTN_S || null,
            ZTEN_LESDEDC_S: obj.ZTEN_LESDEDC_S || null,
            MIRO: obj.MIRO || null,
            MIRO_DATE: formatDate(obj.MIRO_DATE),
            ZTEN_PROCESSED_PYMT: obj.ZTEN_PROCESSED_PYMT || null,
            ED_EC: obj.ED_EC || null,
        }
    ));
    return pl;
}

